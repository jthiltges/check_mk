#!/usr/bin/python
# vim: tabstop=8 expandtab shiftwidth=4 softtabstop=4

import json

class RetCode(object):
    OK, Warning, Critical, Unknown = range(4)

    def __init__(self):
        self.retcode = self.OK

    # Increment warning status (cannot lower)
    def inc(self, code):
        if code > self.retcode:
            self.retcode = code

    def __int__(self):
        return self.retcode

def inventory_ceph_df(info):
    jinfo = json.loads(' '.join(info[0]))
    fslist = ['Global']
    for pool in jinfo['pools']:
        fslist.append(str(pool['name']))

    return df_inventory(fslist)

def check_ceph_df(item, params, info):
    jinfo = json.loads(' '.join(info[0]))
    status = RetCode()
    perfdata = []

    if item == 'Global':
        avail = jinfo['stats']['total_avail_bytes']
        size = jinfo['stats']['total_bytes']

        return df_check_filesystem_single(g_hostname, item, size/1024**2, avail/1024**2, params)
    else:
        pool = (i for i in jinfo['pools'] if i['name'] == item).next()

        stats = pool['stats']

        avail = stats['max_avail']
        used = stats['bytes_used']
        objs = stats['objects']
        size = avail + used

        status, infotext, perfdata = df_check_filesystem_single(g_hostname, item, size/1024**2, avail/1024**2, params)
        perfdata.append(('Objects', objs))
        return status, infotext, perfdata

check_info["ceph_df"] = {
    "check_function"          : check_ceph_df,
    "inventory_function"      : inventory_ceph_df,
    "service_description"     : "Ceph usage for %s",
    "has_perfdata"            : True,
    "group"                   : "filesystem",
    "default_levels_variable" : "filesystem_default_levels",
    "includes"                : ["df.include"],
}
